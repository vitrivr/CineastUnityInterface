/* 
 * Cineast RESTful API
 *
 * Cineast is vitrivr's content-based multimedia retrieval engine. This is it's RESTful API.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@vitrivr.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.Vitrivr.CineastApi.Client;
using Org.Vitrivr.CineastApi.Api;
using Org.Vitrivr.CineastApi.Model;

namespace Org.Vitrivr.CineastApi.Test
{
    /// <summary>
    ///  Class for testing ObjectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ObjectApiTests
    {
        private ObjectApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ObjectApi
            //Assert.IsInstanceOf(typeof(ObjectApi), instance);
        }

        
        /// <summary>
        /// Test FindObjectsAll
        /// </summary>
        [Test]
        public void FindObjectsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //var response = instance.FindObjectsAll(type);
            //Assert.IsInstanceOf(typeof(MediaObjectQueryResult), response, "response is MediaObjectQueryResult");
        }
        
        /// <summary>
        /// Test FindObjectsByAttribute
        /// </summary>
        [Test]
        public void FindObjectsByAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string attribute = null;
            //string value = null;
            //var response = instance.FindObjectsByAttribute(attribute, value);
            //Assert.IsInstanceOf(typeof(MediaObjectQueryResult), response, "response is MediaObjectQueryResult");
        }
        
        /// <summary>
        /// Test FindObjectsByIdBatched
        /// </summary>
        [Test]
        public void FindObjectsByIdBatchedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdList idList = null;
            //var response = instance.FindObjectsByIdBatched(idList);
            //Assert.IsInstanceOf(typeof(MediaObjectQueryResult), response, "response is MediaObjectQueryResult");
        }
        
    }

}
