<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.Vitrivr.Cineast</name>
    </assembly>
    <members>
        <member name="T:Org.Vitrivr.Cineast.Api.IDefaultApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetObjectsWithId(System.String)">
            <summary>
            Get objects with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetObjectsWithIdWithHttpInfo(System.String)">
            <summary>
            Get objects with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetThumbnailsWithId(System.String)">
            <summary>
            Get thumbnails with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetThumbnailsWithIdWithHttpInfo(System.String)">
            <summary>
            Get thumbnails with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetObjectsWithIdAsync(System.String)">
            <summary>
            Get objects with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetObjectsWithIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get objects with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetThumbnailsWithIdAsync(System.String)">
            <summary>
            Get thumbnails with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IDefaultApi.GetThumbnailsWithIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get thumbnails with id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.DefaultApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.DefaultApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.DefaultApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.DefaultApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetObjectsWithId(System.String)">
            <summary>
            Get objects with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetObjectsWithIdWithHttpInfo(System.String)">
            <summary>
            Get objects with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetObjectsWithIdAsync(System.String)">
            <summary>
            Get objects with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetObjectsWithIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get objects with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetThumbnailsWithId(System.String)">
            <summary>
            Get thumbnails with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetThumbnailsWithIdWithHttpInfo(System.String)">
            <summary>
            Get thumbnails with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetThumbnailsWithIdAsync(System.String)">
            <summary>
            Get thumbnails with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.DefaultApi.GetThumbnailsWithIdAsyncWithHttpInfo(System.String)">
            <summary>
            Get thumbnails with id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.DefaultApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.DefaultApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.IMetadataApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaById(System.String)">
            <summary>
            Find metadata for the given object id
            </summary>
            <remarks>
            Find metadata by the given object id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaByIdWithHttpInfo(System.String)">
            <summary>
            Find metadata for the given object id
            </summary>
            <remarks>
            Find metadata by the given object id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaFullyQualified(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key
            </summary>
            <remarks>
            The description
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaFullyQualifiedWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key
            </summary>
            <remarks>
            The description
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomain(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain
            </summary>
            <remarks>
            Find metadata for specific object id in given domain
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain
            </summary>
            <remarks>
            Find metadata for specific object id in given domain
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainBatched(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids
            </summary>
            <remarks>
            Find metadata in the specified domain for all the given ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainBatchedWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids
            </summary>
            <remarks>
            Find metadata in the specified domain for all the given ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKey(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata for a given object id with specified key
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata for a given object id with specified key
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyBatched(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyBatchedWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataForObjectIdBatched(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids
            </summary>
            <remarks>
            Finds metadata for the given list of object ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataForObjectIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids
            </summary>
            <remarks>
            Finds metadata for the given list of object ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaByIdAsync(System.String)">
            <summary>
            Find metadata for the given object id
            </summary>
            <remarks>
            Find metadata by the given object id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Find metadata for the given object id
            </summary>
            <remarks>
            Find metadata by the given object id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaFullyQualifiedAsync(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key
            </summary>
            <remarks>
            The description
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetaFullyQualifiedAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key
            </summary>
            <remarks>
            The description
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainAsync(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain
            </summary>
            <remarks>
            Find metadata for specific object id in given domain
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain
            </summary>
            <remarks>
            Find metadata for specific object id in given domain
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainBatchedAsync(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids
            </summary>
            <remarks>
            Find metadata in the specified domain for all the given ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByDomainBatchedAsyncWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids
            </summary>
            <remarks>
            Find metadata in the specified domain for all the given ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyAsync(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata for a given object id with specified key
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata for a given object id with specified key
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyBatchedAsync(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataByKeyBatchedAsyncWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key
            </summary>
            <remarks>
            Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataForObjectIdBatchedAsync(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids
            </summary>
            <remarks>
            Finds metadata for the given list of object ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMetadataApi.FindMetadataForObjectIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids
            </summary>
            <remarks>
            Finds metadata for the given list of object ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.MetadataApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MetadataApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MetadataApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MetadataApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaById(System.String)">
            <summary>
            Find metadata for the given object id Find metadata by the given object id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaByIdWithHttpInfo(System.String)">
            <summary>
            Find metadata for the given object id Find metadata by the given object id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaByIdAsync(System.String)">
            <summary>
            Find metadata for the given object id Find metadata by the given object id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Find metadata for the given object id Find metadata by the given object id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id to find metadata of</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaFullyQualified(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key The description
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaFullyQualifiedWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key The description
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaFullyQualifiedAsync(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key The description
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetaFullyQualifiedAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain with given key The description
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The object id</param>
            <param name="domain">The domain name</param>
            <param name="key">Metadata key</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomain(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain Find metadata for specific object id in given domain
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain Find metadata for specific object id in given domain
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainAsync(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain Find metadata for specific object id in given domain
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for specific object id in given domain Find metadata for specific object id in given domain
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="id">The object id of the multimedia object to find metadata for</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainBatched(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids Find metadata in the specified domain for all the given ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainBatchedWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids Find metadata in the specified domain for all the given ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainBatchedAsync(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids Find metadata in the specified domain for all the given ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByDomainBatchedAsyncWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata in the specified domain for all the given ids Find metadata in the specified domain for all the given ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="domain">The domain of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKey(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key Find metadata for a given object id with specified key
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key Find metadata for a given object id with specified key
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyAsync(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key Find metadata for a given object id with specified key
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find metadata for a given object id with specified key Find metadata for a given object id with specified key
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="id">The object id of for which the metadata should be find</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyBatched(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyBatchedWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyBatchedAsync(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataByKeyBatchedAsyncWithHttpInfo(System.String,Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find metadata for a given object id with specified key Find metadata with a the speicifed key from the path across all domains and for the provided ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="key">The key of the metadata to find</param>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataForObjectIdBatched(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids Finds metadata for the given list of object ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataForObjectIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids Finds metadata for the given list of object ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>ApiResponse of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataForObjectIdBatchedAsync(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids Finds metadata for the given list of object ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>Task of MediaObjectMetadataQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MetadataApi.FindMetadataForObjectIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Finds metadata for the given list of object ids Finds metadata for the given list of object ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="optionallyFilteredIdList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectMetadataQueryResult)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.MetadataApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.MetadataApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.IMiscApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMiscApi.FindDistinctElementsByColumn(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column
            </summary>
            <remarks>
            Find all distinct elements of a given column. Please note that this operation does cache results.
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMiscApi.FindDistinctElementsByColumnWithHttpInfo(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column
            </summary>
            <remarks>
            Find all distinct elements of a given column. Please note that this operation does cache results.
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>ApiResponse of DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMiscApi.FindDistinctElementsByColumnAsync(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column
            </summary>
            <remarks>
            Find all distinct elements of a given column. Please note that this operation does cache results.
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>Task of DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IMiscApi.FindDistinctElementsByColumnAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column
            </summary>
            <remarks>
            Find all distinct elements of a given column. Please note that this operation does cache results.
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>Task of ApiResponse (DistinctElementsResult)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.MiscApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MiscApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MiscApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.MiscApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.FindDistinctElementsByColumn(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column Find all distinct elements of a given column. Please note that this operation does cache results.
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.FindDistinctElementsByColumnWithHttpInfo(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column Find all distinct elements of a given column. Please note that this operation does cache results.
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>ApiResponse of DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.FindDistinctElementsByColumnAsync(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column Find all distinct elements of a given column. Please note that this operation does cache results.
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>Task of DistinctElementsResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.MiscApi.FindDistinctElementsByColumnAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Find all distinct elements of a given column Find all distinct elements of a given column. Please note that this operation does cache results.
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="columnSpecification"> (optional)</param>
            <returns>Task of ApiResponse (DistinctElementsResult)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.MiscApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.MiscApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.IObjectApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsAll(System.String)">
            <summary>
            Find all objects for a certain type
            </summary>
            <remarks>
            Find all objects for a certain type
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsAllWithHttpInfo(System.String)">
            <summary>
            Find all objects for a certain type
            </summary>
            <remarks>
            Find all objects for a certain type
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByAttribute(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path
            </summary>
            <remarks>
            Find object by specified attribute value. I.e by id, name or path
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByAttributeWithHttpInfo(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path
            </summary>
            <remarks>
            Find object by specified attribute value. I.e by id, name or path
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByIdBatched(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id
            </summary>
            <remarks>
            Find objects by id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id
            </summary>
            <remarks>
            Find objects by id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsAllAsync(System.String)">
            <summary>
            Find all objects for a certain type
            </summary>
            <remarks>
            Find all objects for a certain type
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsAllAsyncWithHttpInfo(System.String)">
            <summary>
            Find all objects for a certain type
            </summary>
            <remarks>
            Find all objects for a certain type
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByAttributeAsync(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path
            </summary>
            <remarks>
            Find object by specified attribute value. I.e by id, name or path
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByAttributeAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path
            </summary>
            <remarks>
            Find object by specified attribute value. I.e by id, name or path
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByIdBatchedAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id
            </summary>
            <remarks>
            Find objects by id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IObjectApi.FindObjectsByIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id
            </summary>
            <remarks>
            Find objects by id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.ObjectApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.ObjectApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.ObjectApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.ObjectApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsAll(System.String)">
            <summary>
            Find all objects for a certain type Find all objects for a certain type
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsAllWithHttpInfo(System.String)">
            <summary>
            Find all objects for a certain type Find all objects for a certain type
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsAllAsync(System.String)">
            <summary>
            Find all objects for a certain type Find all objects for a certain type
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsAllAsyncWithHttpInfo(System.String)">
            <summary>
            Find all objects for a certain type Find all objects for a certain type
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="type">The type the objects should have</param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByAttribute(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path Find object by specified attribute value. I.e by id, name or path
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByAttributeWithHttpInfo(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path Find object by specified attribute value. I.e by id, name or path
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByAttributeAsync(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path Find object by specified attribute value. I.e by id, name or path
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByAttributeAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find object by specified attribute value. I.e by id, name or path Find object by specified attribute value. I.e by id, name or path
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute type of the value. One of: id, name, path</param>
            <param name="value"></param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByIdBatched(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id Find objects by id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id Find objects by id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByIdBatchedAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id Find objects by id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaObjectQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ObjectApi.FindObjectsByIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find objects by id Find objects by id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaObjectQueryResult)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.ObjectApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.ObjectApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.ISegmentApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentById(System.String)">
            <summary>
            Finds segments for specified id
            </summary>
            <remarks>
            Finds segments for specified id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdWithHttpInfo(System.String)">
            <summary>
            Finds segments for specified id
            </summary>
            <remarks>
            Finds segments for specified id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdBatched(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids
            </summary>
            <remarks>
            Finds segments for specified ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids
            </summary>
            <remarks>
            Finds segments for specified ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByObjectId(System.String)">
            <summary>
            Find segments by their media object's id
            </summary>
            <remarks>
            Find segments by their media object's id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByObjectIdWithHttpInfo(System.String)">
            <summary>
            Find segments by their media object's id
            </summary>
            <remarks>
            Find segments by their media object's id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdAsync(System.String)">
            <summary>
            Finds segments for specified id
            </summary>
            <remarks>
            Finds segments for specified id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Finds segments for specified id
            </summary>
            <remarks>
            Finds segments for specified id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdBatchedAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids
            </summary>
            <remarks>
            Finds segments for specified ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids
            </summary>
            <remarks>
            Finds segments for specified ids
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByObjectIdAsync(System.String)">
            <summary>
            Find segments by their media object's id
            </summary>
            <remarks>
            Find segments by their media object's id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentApi.FindSegmentByObjectIdAsyncWithHttpInfo(System.String)">
            <summary>
            Find segments by their media object's id
            </summary>
            <remarks>
            Find segments by their media object's id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.SegmentApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentById(System.String)">
            <summary>
            Finds segments for specified id Finds segments for specified id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdWithHttpInfo(System.String)">
            <summary>
            Finds segments for specified id Finds segments for specified id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdAsync(System.String)">
            <summary>
            Finds segments for specified id Finds segments for specified id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdAsyncWithHttpInfo(System.String)">
            <summary>
            Finds segments for specified id Finds segments for specified id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the segments</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdBatched(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids Finds segments for specified ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdBatchedWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids Finds segments for specified ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdBatchedAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids Finds segments for specified ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByIdBatchedAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Finds segments for specified ids Finds segments for specified ids
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByObjectId(System.String)">
            <summary>
            Find segments by their media object's id Find segments by their media object's id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByObjectIdWithHttpInfo(System.String)">
            <summary>
            Find segments by their media object's id Find segments by their media object's id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>ApiResponse of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByObjectIdAsync(System.String)">
            <summary>
            Find segments by their media object's id Find segments by their media object's id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>Task of MediaSegmentQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentApi.FindSegmentByObjectIdAsyncWithHttpInfo(System.String)">
            <summary>
            Find segments by their media object's id Find segments by their media object's id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the media object to find segments fo</param>
            <returns>Task of ApiResponse (MediaSegmentQueryResult)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SegmentApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SegmentApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.ISegmentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentsApi.FindSegmentSimilar(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query
            </summary>
            <remarks>
            Performs a similarity search based on the formulated query
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentsApi.FindSegmentSimilarWithHttpInfo(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query
            </summary>
            <remarks>
            Performs a similarity search based on the formulated query
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>ApiResponse of SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentsApi.FindSegmentSimilarAsync(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query
            </summary>
            <remarks>
            Performs a similarity search based on the formulated query
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>Task of SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISegmentsApi.FindSegmentSimilarAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query
            </summary>
            <remarks>
            Performs a similarity search based on the formulated query
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>Task of ApiResponse (SimilarityQueryResultBatch)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.SegmentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SegmentsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.FindSegmentSimilar(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query Performs a similarity search based on the formulated query
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.FindSegmentSimilarWithHttpInfo(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query Performs a similarity search based on the formulated query
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>ApiResponse of SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.FindSegmentSimilarAsync(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query Performs a similarity search based on the formulated query
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>Task of SimilarityQueryResultBatch</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SegmentsApi.FindSegmentSimilarAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Find similar segments based on the given query Performs a similarity search based on the formulated query
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="similarityQuery"> (optional)</param>
            <returns>Task of ApiResponse (SimilarityQueryResultBatch)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SegmentsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SegmentsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.ISessionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndExtraction">
            <summary>
            End the active extraction session
            </summary>
            <remarks>
            CAUTION. Untested
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndExtractionWithHttpInfo">
            <summary>
            End the active extraction session
            </summary>
            <remarks>
            CAUTION. Untested
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndSession(System.String)">
            <summary>
            End the session for given id
            </summary>
            <remarks>
            Ends the session for the given id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndSessionWithHttpInfo(System.String)">
            <summary>
            End the session for given id
            </summary>
            <remarks>
            Ends the session for the given id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ExtractItem(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item
            </summary>
            <remarks>
            TODO
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ExtractItemWithHttpInfo(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item
            </summary>
            <remarks>
            TODO
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartExtraction">
            <summary>
            Start extraction session
            </summary>
            <remarks>
            Changes the session's state to extraction
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartExtractionWithHttpInfo">
            <summary>
            Start extraction session
            </summary>
            <remarks>
            Changes the session's state to extraction
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartSession(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartSessionWithHttpInfo(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ValidateSession(System.String)">
            <summary>
            Validates the session with given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ValidateSessionWithHttpInfo(System.String)">
            <summary>
            Validates the session with given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndExtractionAsync">
            <summary>
            End the active extraction session
            </summary>
            <remarks>
            CAUTION. Untested
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndExtractionAsyncWithHttpInfo">
            <summary>
            End the active extraction session
            </summary>
            <remarks>
            CAUTION. Untested
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndSessionAsync(System.String)">
            <summary>
            End the session for given id
            </summary>
            <remarks>
            Ends the session for the given id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.EndSessionAsyncWithHttpInfo(System.String)">
            <summary>
            End the session for given id
            </summary>
            <remarks>
            Ends the session for the given id
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ExtractItemAsync(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item
            </summary>
            <remarks>
            TODO
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ExtractItemAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item
            </summary>
            <remarks>
            TODO
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartExtractionAsync">
            <summary>
            Start extraction session
            </summary>
            <remarks>
            Changes the session's state to extraction
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartExtractionAsyncWithHttpInfo">
            <summary>
            Start extraction session
            </summary>
            <remarks>
            Changes the session's state to extraction
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartSessionAsync(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.StartSessionAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ValidateSessionAsync(System.String)">
            <summary>
            Validates the session with given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ISessionApi.ValidateSessionAsyncWithHttpInfo(System.String)">
            <summary>
            Validates the session with given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.SessionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SessionApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SessionApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.SessionApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndExtraction">
            <summary>
            End the active extraction session CAUTION. Untested
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndExtractionWithHttpInfo">
            <summary>
            End the active extraction session CAUTION. Untested
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndExtractionAsync">
            <summary>
            End the active extraction session CAUTION. Untested
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndExtractionAsyncWithHttpInfo">
            <summary>
            End the active extraction session CAUTION. Untested
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndSession(System.String)">
            <summary>
            End the session for given id Ends the session for the given id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndSessionWithHttpInfo(System.String)">
            <summary>
            End the session for given id Ends the session for the given id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndSessionAsync(System.String)">
            <summary>
            End the session for given id Ends the session for the given id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.EndSessionAsyncWithHttpInfo(System.String)">
            <summary>
            End the session for given id Ends the session for the given id
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id of the session to end</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ExtractItem(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item TODO
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ExtractItemWithHttpInfo(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item TODO
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ExtractItemAsync(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item TODO
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ExtractItemAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Extract new item TODO
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="extractionContainerMessage"> (optional)</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartExtraction">
            <summary>
            Start extraction session Changes the session's state to extraction
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartExtractionWithHttpInfo">
            <summary>
            Start extraction session Changes the session's state to extraction
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartExtractionAsync">
            <summary>
            Start extraction session Changes the session's state to extraction
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartExtractionAsyncWithHttpInfo">
            <summary>
            Start extraction session Changes the session's state to extraction
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartSession(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartSessionWithHttpInfo(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartSessionAsync(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.StartSessionAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Start new session for given credentials 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="startSessionMessage"> (optional)</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ValidateSession(System.String)">
            <summary>
            Validates the session with given id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ValidateSessionWithHttpInfo(System.String)">
            <summary>
            Validates the session with given id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>ApiResponse of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ValidateSessionAsync(System.String)">
            <summary>
            Validates the session with given id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>Task of SessionState</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.SessionApi.ValidateSessionAsyncWithHttpInfo(System.String)">
            <summary>
            Validates the session with given id 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The id to validate the session of</param>
            <returns>Task of ApiResponse (SessionState)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SessionApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.SessionApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.IStatusApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IStatusApi.Status">
            <summary>
            Get the status of the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IStatusApi.StatusWithHttpInfo">
            <summary>
            Get the status of the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IStatusApi.StatusAsync">
            <summary>
            Get the status of the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.IStatusApi.StatusAsyncWithHttpInfo">
            <summary>
            Get the status of the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (Ping)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.StatusApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.StatusApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.StatusApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.StatusApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.Status">
            <summary>
            Get the status of the server 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.StatusWithHttpInfo">
            <summary>
            Get the status of the server 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.StatusAsync">
            <summary>
            Get the status of the server 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of Ping</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.StatusApi.StatusAsyncWithHttpInfo">
            <summary>
            Get the status of the server 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (Ping)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.StatusApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.StatusApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.ITagApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindAllTags">
            <summary>
            Find all tags
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindAllTagsWithHttpInfo">
            <summary>
            Find all tags
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsBy(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value
            </summary>
            <remarks>
            Find all tags by attributes id, name or matchingname and filter value
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByWithHttpInfo(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value
            </summary>
            <remarks>
            Find all tags by attributes id, name or matchingname and filter value
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsById(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByIdWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindAllTagsAsync">
            <summary>
            Find all tags
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindAllTagsAsyncWithHttpInfo">
            <summary>
            Find all tags
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByAsync(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value
            </summary>
            <remarks>
            Find all tags by attributes id, name or matchingname and filter value
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value
            </summary>
            <remarks>
            Find all tags by attributes id, name or matchingname and filter value
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByIdAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.ITagApi.FindTagsByIdAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Api.TagApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.TagApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.TagApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Api.TagApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindAllTags">
            <summary>
            Find all tags 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindAllTagsWithHttpInfo">
            <summary>
            Find all tags 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindAllTagsAsync">
            <summary>
            Find all tags 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindAllTagsAsyncWithHttpInfo">
            <summary>
            Find all tags 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsBy(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value Find all tags by attributes id, name or matchingname and filter value
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByWithHttpInfo(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value Find all tags by attributes id, name or matchingname and filter value
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByAsync(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value Find all tags by attributes id, name or matchingname and filter value
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Find all tags specified by attribute value Find all tags by attributes id, name or matchingname and filter value
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="attribute">The attribute to filter on. One of: id, name, matchingname</param>
            <param name="value">The value of the attribute to filter</param>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsById(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByIdWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>ApiResponse of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByIdAsync(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of TagsQueryResult</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Api.TagApi.FindTagsByIdAsyncWithHttpInfo(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Find all tags by ids 
            </summary>
            <exception cref="T:Org.Vitrivr.Cineast.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="idList"> (optional)</param>
            <returns>Task of ApiResponse (TagsQueryResult)</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.TagApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Api.TagApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.#ctor(Org.Vitrivr.Cineast.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiClient"/> class
            with default base path (http://localhost:4567).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="collectionFormat">Collection format.</param>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:Org.Vitrivr.Cineast.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:Org.Vitrivr.Cineast.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.#ctor(Org.Vitrivr.Cineast.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.#ctor(Org.Vitrivr.Cineast.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:Org.Vitrivr.Cineast.Client.Configuration.ApiClient"/> based on this <see cref="T:Org.Vitrivr.Cineast.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.GlobalConfiguration">
            <summary>
            <see cref="T:Org.Vitrivr.Cineast.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .openapi-generator-ignore file.
            </remarks>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Client.OpenAPIDateConverter">
            <summary>
            Formatter for 'date' openapi formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Client.OpenAPIDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Client.OpenAPIDateConverter"/> class.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor">
            <summary>
            AbstractMetadataFilterDescriptor
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor"/> class.
            </summary>
            <param name="keywords">keywords.</param>
            <param name="type">type (required).</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.Equals(Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor)">
            <summary>
            Returns true if AbstractMetadataFilterDescriptor instances are equal
            </summary>
            <param name="input">Instance of AbstractMetadataFilterDescriptor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.BaseValidate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.Keywords">
            <summary>
            Gets or Sets Keywords
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.ColumnSpecification">
            <summary>
            ColumnSpecification
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.#ctor(System.String,System.String,System.Nullable{Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.ColumnSpecification"/> class.
            </summary>
            <param name="column">column.</param>
            <param name="table">table.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.Equals(Org.Vitrivr.Cineast.Model.ColumnSpecification)">
            <summary>
            Returns true if ColumnSpecification instances are equal
            </summary>
            <param name="input">Instance of ColumnSpecification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ColumnSpecification.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ColumnSpecification.Column">
            <summary>
            Gets or Sets Column
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ColumnSpecification.Table">
            <summary>
            Gets or Sets Table
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ColumnSpecification.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.Credentials">
            <summary>
            Credentials
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.Credentials"/> class.
            </summary>
            <param name="username">username.</param>
            <param name="password">password.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.Equals(Org.Vitrivr.Cineast.Model.Credentials)">
            <summary>
            Returns true if Credentials instances are equal
            </summary>
            <param name="input">Instance of Credentials to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Credentials.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Credentials.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Credentials.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.DistinctElementsResult">
            <summary>
            DistinctElementsResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.DistinctElementsResult"/> class.
            </summary>
            <param name="queryId">queryId.</param>
            <param name="distinctElements">distinctElements.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.Equals(Org.Vitrivr.Cineast.Model.DistinctElementsResult)">
            <summary>
            Returns true if DistinctElementsResult instances are equal
            </summary>
            <param name="input">Instance of DistinctElementsResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.DistinctElementsResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.DistinctElementsResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.DistinctElementsResult.DistinctElements">
            <summary>
            Gets or Sets DistinctElements
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage">
            <summary>
            ExtractionContainerMessage
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.ExtractionItemContainer},System.Nullable{Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage"/> class.
            </summary>
            <param name="items">items.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.Equals(Org.Vitrivr.Cineast.Model.ExtractionContainerMessage)">
            <summary>
            Returns true if ExtractionContainerMessage instances are equal
            </summary>
            <param name="input">Instance of ExtractionContainerMessage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.Items">
            <summary>
            Gets or Sets Items
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.ExtractionContainerMessage.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.ExtractionItemContainer">
            <summary>
            ExtractionItemContainer
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.#ctor(Org.Vitrivr.Cineast.Model.MediaObjectDescriptor,System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.ExtractionItemContainer"/> class.
            </summary>
            <param name="_object">_object.</param>
            <param name="metadata">metadata.</param>
            <param name="uri">uri.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.Equals(Org.Vitrivr.Cineast.Model.ExtractionItemContainer)">
            <summary>
            Returns true if ExtractionItemContainer instances are equal
            </summary>
            <param name="input">Instance of ExtractionItemContainer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.Object">
            <summary>
            Gets or Sets Object
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.Metadata">
            <summary>
            Gets or Sets Metadata
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.ExtractionItemContainer.Uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.IdList">
            <summary>
            IdList
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.#ctor(System.Collections.Generic.List{System.String},System.Nullable{Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.IdList"/> class.
            </summary>
            <param name="ids">ids.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.Equals(Org.Vitrivr.Cineast.Model.IdList)">
            <summary>
            Returns true if IdList instances are equal
            </summary>
            <param name="input">Instance of IdList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.IdList.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.IdList.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.IdList.Ids">
            <summary>
            Gets or Sets Ids
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.IdList.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor">
            <summary>
            MediaObjectDescriptor
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.#ctor(System.String,System.String,System.String,System.Nullable{Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor"/> class.
            </summary>
            <param name="objectId">objectId.</param>
            <param name="name">name.</param>
            <param name="path">path.</param>
            <param name="mediatype">mediatype.</param>
            <param name="exists">exists.</param>
            <param name="contentURL">contentURL.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Equals(Org.Vitrivr.Cineast.Model.MediaObjectDescriptor)">
            <summary>
            Returns true if MediaObjectDescriptor instances are equal
            </summary>
            <param name="input">Instance of MediaObjectDescriptor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Mediatype">
            <summary>
            Gets or Sets Mediatype
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.ObjectId">
            <summary>
            Gets or Sets ObjectId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Path">
            <summary>
            Gets or Sets Path
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.Exists">
            <summary>
            Gets or Sets Exists
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.ContentURL">
            <summary>
            Gets or Sets ContentURL
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum">
            <summary>
            Defines Mediatype
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.VIDEO">
            <summary>
            Enum VIDEO for value: VIDEO
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.IMAGE">
            <summary>
            Enum IMAGE for value: IMAGE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.AUDIO">
            <summary>
            Enum AUDIO for value: AUDIO
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.MODEL3D">
            <summary>
            Enum MODEL3D for value: MODEL3D
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.IMAGESEQUENCE">
            <summary>
            Enum IMAGESEQUENCE for value: IMAGE_SEQUENCE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectDescriptor.MediatypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor">
            <summary>
            MediaObjectMetadataDescriptor
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor"/> class.
            </summary>
            <param name="objectId">objectId.</param>
            <param name="domain">domain.</param>
            <param name="key">key.</param>
            <param name="value">value.</param>
            <param name="exists">exists.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Equals(Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor)">
            <summary>
            Returns true if MediaObjectMetadataDescriptor instances are equal
            </summary>
            <param name="input">Instance of MediaObjectMetadataDescriptor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.ObjectId">
            <summary>
            Gets or Sets ObjectId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Domain">
            <summary>
            Gets or Sets Domain
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor.Exists">
            <summary>
            Gets or Sets Exists
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult">
            <summary>
            MediaObjectMetadataQueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.MediaObjectMetadataDescriptor},System.String,System.Nullable{Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult"/> class.
            </summary>
            <param name="content">content.</param>
            <param name="queryId">queryId.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.Equals(Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult)">
            <summary>
            Returns true if MediaObjectMetadataQueryResult instances are equal
            </summary>
            <param name="input">Instance of MediaObjectMetadataQueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectMetadataQueryResult.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult">
            <summary>
            MediaObjectQueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.MediaObjectDescriptor},System.String,System.Nullable{Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult"/> class.
            </summary>
            <param name="content">content.</param>
            <param name="queryId">queryId.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.Equals(Org.Vitrivr.Cineast.Model.MediaObjectQueryResult)">
            <summary>
            Returns true if MediaObjectQueryResult instances are equal
            </summary>
            <param name="input">Instance of MediaObjectQueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaObjectQueryResult.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor">
            <summary>
            MediaSegmentDescriptor
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.#ctor(System.String,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor"/> class.
            </summary>
            <param name="segmentId">segmentId.</param>
            <param name="objectId">objectId.</param>
            <param name="start">start.</param>
            <param name="end">end.</param>
            <param name="startabs">startabs.</param>
            <param name="endabs">endabs.</param>
            <param name="sequenceNumber">sequenceNumber.</param>
            <param name="count">count.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Equals(Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor)">
            <summary>
            Returns true if MediaSegmentDescriptor instances are equal
            </summary>
            <param name="input">Instance of MediaSegmentDescriptor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.SegmentId">
            <summary>
            Gets or Sets SegmentId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.ObjectId">
            <summary>
            Gets or Sets ObjectId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Start">
            <summary>
            Gets or Sets Start
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.End">
            <summary>
            Gets or Sets End
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Startabs">
            <summary>
            Gets or Sets Startabs
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Endabs">
            <summary>
            Gets or Sets Endabs
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.SequenceNumber">
            <summary>
            Gets or Sets SequenceNumber
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor.Count">
            <summary>
            Gets or Sets Count
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult">
            <summary>
            MediaSegmentQueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.MediaSegmentDescriptor},System.String,System.Nullable{Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult"/> class.
            </summary>
            <param name="content">content.</param>
            <param name="queryId">queryId.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.Equals(Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult)">
            <summary>
            Returns true if MediaSegmentQueryResult instances are equal
            </summary>
            <param name="input">Instance of MediaSegmentQueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.MediaSegmentQueryResult.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MetadataDomainFilter">
            <summary>
            MetadataDomainFilter
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MetadataDomainFilter"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MetadataDomainFilter"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.Equals(Org.Vitrivr.Cineast.Model.MetadataDomainFilter)">
            <summary>
            Returns true if MetadataDomainFilter instances are equal
            </summary>
            <param name="input">Instance of MetadataDomainFilter to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataDomainFilter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.MetadataKeyFilter">
            <summary>
            MetadataKeyFilter
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MetadataKeyFilter"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.MetadataKeyFilter"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.Equals(Org.Vitrivr.Cineast.Model.MetadataKeyFilter)">
            <summary>
            Returns true if MetadataKeyFilter instances are equal
            </summary>
            <param name="input">Instance of MetadataKeyFilter to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.MetadataKeyFilter.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList">
            <summary>
            OptionallyFilteredIdList
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.AbstractMetadataFilterDescriptor},System.Collections.Generic.List{System.String},System.Nullable{Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList"/> class.
            </summary>
            <param name="filters">filters.</param>
            <param name="ids">ids.</param>
            <param name="messageType">messageType.</param>
            <param name="idList">idList.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.Equals(Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList)">
            <summary>
            Returns true if OptionallyFilteredIdList instances are equal
            </summary>
            <param name="input">Instance of OptionallyFilteredIdList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.Filters">
            <summary>
            Gets or Sets Filters
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.Ids">
            <summary>
            Gets or Sets Ids
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.IdList">
            <summary>
            Gets or Sets IdList
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.OptionallyFilteredIdList.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.#ctor(System.Nullable{Org.Vitrivr.Cineast.Model.Ping.StatusEnum},System.Nullable{Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.Ping"/> class.
            </summary>
            <param name="status">status.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.Equals(Org.Vitrivr.Cineast.Model.Ping)">
            <summary>
            Returns true if Ping instances are equal
            </summary>
            <param name="input">Instance of Ping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Ping.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Ping.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Ping.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.Ping.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.Ping.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryComponent">
            <summary>
            QueryComponent
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.QueryTerm},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.QueryComponent"/> class.
            </summary>
            <param name="terms">terms.</param>
            <param name="containerId">containerId.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.Equals(Org.Vitrivr.Cineast.Model.QueryComponent)">
            <summary>
            Returns true if QueryComponent instances are equal
            </summary>
            <param name="input">Instance of QueryComponent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryComponent.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryComponent.Terms">
            <summary>
            Gets or Sets Terms
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryComponent.ContainerId">
            <summary>
            Gets or Sets ContainerId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryConfig">
            <summary>
            QueryConfig
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.#ctor(System.Guid,System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum},System.Nullable{Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum},System.Collections.Generic.List{System.Single},System.Single,System.Int32,System.Int32,System.Collections.Generic.List{System.String},Org.Vitrivr.Cineast.Model.QueryConfig,Org.Vitrivr.Cineast.Model.QueryConfig,System.Object,Org.Vitrivr.Cineast.Model.QueryConfig,Org.Vitrivr.Cineast.Model.QueryConfig,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.QueryConfig"/> class.
            </summary>
            <param name="queryId">queryId.</param>
            <param name="hints">hints.</param>
            <param name="distance">distance.</param>
            <param name="distanceWeights">distanceWeights.</param>
            <param name="norm">norm.</param>
            <param name="resultsPerModule">resultsPerModule.</param>
            <param name="maxResults">maxResults.</param>
            <param name="relevantSegmentIds">relevantSegmentIds.</param>
            <param name="correspondenceFunctionIfEmpty">correspondenceFunctionIfEmpty.</param>
            <param name="distanceWeightsIfEmpty">distanceWeightsIfEmpty.</param>
            <param name="correspondenceFunction">correspondenceFunction.</param>
            <param name="distanceIfEmpty">distanceIfEmpty.</param>
            <param name="normIfEmpty">normIfEmpty.</param>
            <param name="rawResultsPerModule">rawResultsPerModule.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.Equals(Org.Vitrivr.Cineast.Model.QueryConfig)">
            <summary>
            Returns true if QueryConfig instances are equal
            </summary>
            <param name="input">Instance of QueryConfig to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryConfig.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.Hints">
            <summary>
            Gets or Sets Hints
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.Distance">
            <summary>
            Gets or Sets Distance
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceWeights">
            <summary>
            Gets or Sets DistanceWeights
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.Norm">
            <summary>
            Gets or Sets Norm
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.ResultsPerModule">
            <summary>
            Gets or Sets ResultsPerModule
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.MaxResults">
            <summary>
            Gets or Sets MaxResults
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.RelevantSegmentIds">
            <summary>
            Gets or Sets RelevantSegmentIds
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.CorrespondenceFunctionIfEmpty">
            <summary>
            Gets or Sets CorrespondenceFunctionIfEmpty
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceWeightsIfEmpty">
            <summary>
            Gets or Sets DistanceWeightsIfEmpty
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.CorrespondenceFunction">
            <summary>
            Gets or Sets CorrespondenceFunction
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceIfEmpty">
            <summary>
            Gets or Sets DistanceIfEmpty
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.NormIfEmpty">
            <summary>
            Gets or Sets NormIfEmpty
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryConfig.RawResultsPerModule">
            <summary>
            Gets or Sets RawResultsPerModule
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum">
            <summary>
            Defines Hints
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Exact">
            <summary>
            Enum Exact for value: exact
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Inexact">
            <summary>
            Enum Inexact for value: inexact
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Lsh">
            <summary>
            Enum Lsh for value: lsh
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Ecp">
            <summary>
            Enum Ecp for value: ecp
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Mi">
            <summary>
            Enum Mi for value: mi
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Pq">
            <summary>
            Enum Pq for value: pq
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Sh">
            <summary>
            Enum Sh for value: sh
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Va">
            <summary>
            Enum Va for value: va
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Vaf">
            <summary>
            Enum Vaf for value: vaf
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Vav">
            <summary>
            Enum Vav for value: vav
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Sequential">
            <summary>
            Enum Sequential for value: sequential
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.HintsEnum.Empirical">
            <summary>
            Enum Empirical for value: empirical
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum">
            <summary>
            Defines Distance
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Chisquared">
            <summary>
            Enum Chisquared for value: chisquared
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Correlation">
            <summary>
            Enum Correlation for value: correlation
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Cosine">
            <summary>
            Enum Cosine for value: cosine
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Hamming">
            <summary>
            Enum Hamming for value: hamming
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Jaccard">
            <summary>
            Enum Jaccard for value: jaccard
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Kullbackleibler">
            <summary>
            Enum Kullbackleibler for value: kullbackleibler
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Chebyshev">
            <summary>
            Enum Chebyshev for value: chebyshev
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Euclidean">
            <summary>
            Enum Euclidean for value: euclidean
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Squaredeuclidean">
            <summary>
            Enum Squaredeuclidean for value: squaredeuclidean
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Manhattan">
            <summary>
            Enum Manhattan for value: manhattan
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Minkowski">
            <summary>
            Enum Minkowski for value: minkowski
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Spannorm">
            <summary>
            Enum Spannorm for value: spannorm
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryConfig.DistanceEnum.Haversine">
            <summary>
            Enum Haversine for value: haversine
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryTerm">
            <summary>
            QueryTerm
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.#ctor(System.Nullable{Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum},System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.QueryTerm"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="data">data.</param>
            <param name="categories">categories.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.Equals(Org.Vitrivr.Cineast.Model.QueryTerm)">
            <summary>
            Returns true if QueryTerm instances are equal
            </summary>
            <param name="input">Instance of QueryTerm to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.QueryTerm.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryTerm.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryTerm.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.QueryTerm.Categories">
            <summary>
            Gets or Sets Categories
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.IMAGE">
            <summary>
            Enum IMAGE for value: IMAGE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.AUDIO">
            <summary>
            Enum AUDIO for value: AUDIO
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.MOTION">
            <summary>
            Enum MOTION for value: MOTION
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.MODEL3D">
            <summary>
            Enum MODEL3D for value: MODEL3D
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.LOCATION">
            <summary>
            Enum LOCATION for value: LOCATION
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.TIME">
            <summary>
            Enum TIME for value: TIME
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.TEXT">
            <summary>
            Enum TEXT for value: TEXT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.TAG">
            <summary>
            Enum TAG for value: TAG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.SEMANTIC">
            <summary>
            Enum SEMANTIC for value: SEMANTIC
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.ID">
            <summary>
            Enum ID for value: ID
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.QueryTerm.TypeEnum.BOOLEAN">
            <summary>
            Enum BOOLEAN for value: BOOLEAN
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SessionState">
            <summary>
            SessionState
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.#ctor(System.String,System.Int64,System.Nullable{Org.Vitrivr.Cineast.Model.SessionState.TypeEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.SessionState"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="validUntil">validUntil.</param>
            <param name="type">type.</param>
            <param name="sessionId">sessionId.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.Equals(Org.Vitrivr.Cineast.Model.SessionState)">
            <summary>
            Returns true if SessionState instances are equal
            </summary>
            <param name="input">Instance of SessionState to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SessionState.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SessionState.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SessionState.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SessionState.ValidUntil">
            <summary>
            Gets or Sets ValidUntil
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SessionState.SessionId">
            <summary>
            Gets or Sets SessionId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SessionState.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SessionState.TypeEnum.UNAUTHENTICATED">
            <summary>
            Enum UNAUTHENTICATED for value: UNAUTHENTICATED
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SessionState.TypeEnum.USER">
            <summary>
            Enum USER for value: USER
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SessionState.TypeEnum.ADMIN">
            <summary>
            Enum ADMIN for value: ADMIN
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SimilarityQuery">
            <summary>
            SimilarityQuery
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.QueryComponent},Org.Vitrivr.Cineast.Model.QueryConfig,System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.QueryComponent},System.Nullable{Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.SimilarityQuery"/> class.
            </summary>
            <param name="containers">containers.</param>
            <param name="config">config.</param>
            <param name="components">components.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.Equals(Org.Vitrivr.Cineast.Model.SimilarityQuery)">
            <summary>
            Returns true if SimilarityQuery instances are equal
            </summary>
            <param name="input">Instance of SimilarityQuery to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQuery.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQuery.Containers">
            <summary>
            Gets or Sets Containers
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQuery.Config">
            <summary>
            Gets or Sets Config
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQuery.Components">
            <summary>
            Gets or Sets Components
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQuery.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SimilarityQueryResult">
            <summary>
            SimilarityQueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.#ctor(System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.StringDoublePair},System.String,System.String,System.Int32,System.Nullable{Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.SimilarityQueryResult"/> class.
            </summary>
            <param name="content">content.</param>
            <param name="queryId">queryId.</param>
            <param name="category">category.</param>
            <param name="containerId">containerId.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.Equals(Org.Vitrivr.Cineast.Model.SimilarityQueryResult)">
            <summary>
            Returns true if SimilarityQueryResult instances are equal
            </summary>
            <param name="input">Instance of SimilarityQueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.Category">
            <summary>
            Gets or Sets Category
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.ContainerId">
            <summary>
            Gets or Sets ContainerId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.SimilarityQueryResult.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch">
            <summary>
            SimilarityQueryResultBatch
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.SimilarityQueryResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch"/> class.
            </summary>
            <param name="categories">categories.</param>
            <param name="results">results.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.Equals(Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch)">
            <summary>
            Returns true if SimilarityQueryResultBatch instances are equal
            </summary>
            <param name="input">Instance of SimilarityQueryResultBatch to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.Categories">
            <summary>
            Gets or Sets Categories
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.SimilarityQueryResultBatch.Results">
            <summary>
            Gets or Sets Results
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.StartSessionMessage">
            <summary>
            StartSessionMessage
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.#ctor(Org.Vitrivr.Cineast.Model.Credentials,System.Nullable{Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.StartSessionMessage"/> class.
            </summary>
            <param name="credentials">credentials.</param>
            <param name="messageType">messageType.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.Equals(Org.Vitrivr.Cineast.Model.StartSessionMessage)">
            <summary>
            Returns true if StartSessionMessage instances are equal
            </summary>
            <param name="input">Instance of StartSessionMessage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StartSessionMessage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageType">
            <summary>
            Gets or Sets MessageType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.StartSessionMessage.Credentials">
            <summary>
            Gets or Sets Credentials
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum">
            <summary>
            Defines MessageType
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.PING">
            <summary>
            Enum PING for value: PING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QSIM">
            <summary>
            Enum QSIM for value: Q_SIM
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QMLT">
            <summary>
            Enum QMLT for value: Q_MLT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QNESEG">
            <summary>
            Enum QNESEG for value: Q_NESEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QSEG">
            <summary>
            Enum QSEG for value: Q_SEG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.MLOOKUP">
            <summary>
            Enum MLOOKUP for value: M_LOOKUP
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QTEMPORAL">
            <summary>
            Enum QTEMPORAL for value: Q_TEMPORAL
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.SESSIONSTART">
            <summary>
            Enum SESSIONSTART for value: SESSION_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRSTART">
            <summary>
            Enum QRSTART for value: QR_START
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QREND">
            <summary>
            Enum QREND for value: QR_END
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRERROR">
            <summary>
            Enum QRERROR for value: QR_ERROR
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QROBJECT">
            <summary>
            Enum QROBJECT for value: QR_OBJECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRMETADATAO">
            <summary>
            Enum QRMETADATAO for value: QR_METADATA_O
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRMETADATAS">
            <summary>
            Enum QRMETADATAS for value: QR_METADATA_S
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRSEGMENT">
            <summary>
            Enum QRSEGMENT for value: QR_SEGMENT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.Cineast.Model.StartSessionMessage.MessageTypeEnum.QRSIMILARITY">
            <summary>
            Enum QRSIMILARITY for value: QR_SIMILARITY
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.StringDoublePair">
            <summary>
            StringDoublePair
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.StringDoublePair"/> class.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.Equals(Org.Vitrivr.Cineast.Model.StringDoublePair)">
            <summary>
            Returns true if StringDoublePair instances are equal
            </summary>
            <param name="input">Instance of StringDoublePair to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.StringDoublePair.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.StringDoublePair.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.StringDoublePair.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.Tag"/> class.
            </summary>
            <param name="description">description.</param>
            <param name="name">name.</param>
            <param name="id">id.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.Equals(Org.Vitrivr.Cineast.Model.Tag)">
            <summary>
            Returns true if Tag instances are equal
            </summary>
            <param name="input">Instance of Tag to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.Tag.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Tag.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Tag.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.Tag.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="T:Org.Vitrivr.Cineast.Model.TagsQueryResult">
            <summary>
            TagsQueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.#ctor(System.String,System.Collections.Generic.List{Org.Vitrivr.Cineast.Model.Tag})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.Cineast.Model.TagsQueryResult"/> class.
            </summary>
            <param name="queryId">queryId.</param>
            <param name="tags">tags.</param>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.Equals(Org.Vitrivr.Cineast.Model.TagsQueryResult)">
            <summary>
            Returns true if TagsQueryResult instances are equal
            </summary>
            <param name="input">Instance of TagsQueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.Cineast.Model.TagsQueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.TagsQueryResult.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="P:Org.Vitrivr.Cineast.Model.TagsQueryResult.Tags">
            <summary>
            Gets or Sets Tags
            </summary>
        </member>
    </members>
</doc>
